service: !Join ['-',['bungee',${env:APP_NAME},'server']]

plugins:
  - serverless-offline
  - serverless-domain-manager
  - serverless-dotenv-plugin

custom:
  stage: "${STAGE}"
#  customDomain:
#    domainName: ${ env:APPLICATION_URI }
#    stage: ${self:provider.stage}
#    createRoute53Record: true
#    certificateArn: ${ env:CERTIFICATE_ARN }

provider:
  name: aws
  runtime: nodejs12.x
  region: ${env:REGION}
  versionFunctions: false

  # ----- Managed policies to provide AWS service access
  iam:
    role:
      managedPolicies:
        - 'arn:aws:iam::aws:policy/AmazonSQSFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/CloudWatchFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonSNSFullAccess'


functions:
  # ----- REST Endpoints

  meta:
    handler: handlers/handler.meta_data
    timeout: 2
    memorySize: 128
    events:
      - http:
          path: /rest/meta
          method: get

  rest:
    handler: handlers/handler.rest
    timeout: 6
    memorySize: 128
    events:
      - http:
          path: /rest/{model}
          method: get
          request:
            parameters:
              paths:
                model: true
      - http:
          path: /rest/{model}
          method: post
          request:
            parameters:
              paths:
                model: true
      - http:
          path: /rest/{model}/{id}
          method: get
          request:
            parameters:
              paths:
                model: true
                id: true
      - http:
          path: /rest/{model}
          method: put
          request:
            parameters:
              paths:
                model: true
      - http:
          path: /rest/{model}/{id}
          method: delete
          request:
            parameters:
              paths:
                model: true
                id: true


resources:
  Resources:
    ${include(./clourformation/vpc.yml)}
    ${include(./cloudformation/db.yml)}
